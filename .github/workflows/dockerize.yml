name: CI/CD

concurrency: deployment

on:
  push:
    branches: [ main ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # Job to build landing page
  landing-page:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}
      
      # Build and push Landing Page Frontend image
      - name: build and push landing page
        uses: docker/build-push-action@v2
        with:
          context: ./landing page/welcome-login/
          file: ./landing page/welcome-login/Dockerfile.prod
          push: true
          tags: ikhurana/ethisim-prod:frontend-landing-page
          cache-from: type=registery, ref=ikhurana/ethisim-prod:frontend-landing-page
          cache-to: type=inline
  
  editor-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}

      #Build and push Editor Frontend image       
      - name: build and push editor frontend
        uses: docker/build-push-action@v2
        with:
          context: ./editor/frontend/ethisim/
          file: ./editor/frontend/ethisim/Dockerfile.prod
          push: true
          tags: ikhurana/ethisim-prod:frontend-editor
          cache-from: type=registery, ref=ikhurana/ethisim-prod:frontend-editor
          cache-to: type=inline

  editor-backend:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}

      # Build and push Editor Backend image
      - name: build and push editor backend
        uses: docker/build-push-action@v2
        with:
          context: ./editor/backend/
          push: true
          tags: ikhurana/ethisim-prod:backend-editor
          cache-from: type=registery, ref=ikhurana/ethisim-prod:backend-editor
          cache-to: type=inline

  simulator-frontend:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}

      # Build and push Simulator Frontend image
      - name: build and push simulator frontend
        uses: docker/build-push-action@v2
        with:
          context: ./simulator/frontend/
          file: ./simulator/frontend/Dockerfile.prod
          push: true
          tags: ikhurana/ethisim-prod:frontend-simulator
          cache-from: type=registery, ref=ikhurana/ethisim-prod:frontend-simulator
          cache-to: type=inline

  simulator-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}

        # Build and push Simulator Backend image
      - name: build and push simulator backend
        uses: docker/build-push-action@v2
        with:
          context: ./simulator/steminist_simulator_backend/
          push: true
          tags: ikhurana/ethisim-prod:backend-simulator
          cache-from: type=registery, ref=ikhurana/ethisim-prod:backend-simulator
          cache-to: type=inline

  deploy:
    runs-on: ubuntu-latest

    needs: [landing-page, editor-frontend, editor-backend, simulator-frontend, simulator-backend]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: copy files into server
        run: |
          sshpass -p ${{ secrets.CSCF_SERVER_PASS }} scp -o StrictHostKeyChecking=no apache_server/ethisim.conf ${{ secrets.CSCF_SERVER_USER }}@${{ secrets.CSCF_SERVER_HOST }}:/shared/docker/configuration/conf.d/ethisim.conf
          sshpass -p ${{ secrets.CSCF_SERVER_PASS }} scp -o StrictHostKeyChecking=no apache_server/httpd.conf ${{ secrets.CSCF_SERVER_USER }}@${{ secrets.CSCF_SERVER_HOST }}:/shared/docker/configuration/conf/httpd.conf

      - name: Prep to deploy
        run: | 
          sudo apt-get install sshpass
          chmod +x .github/scripts/server.sh
          
        #login to the server using ssh
      - name: log in to server
        run: |
          sshpass -p ${{ secrets.CSCF_SERVER_PASS }} ssh -tt -o StrictHostKeyChecking=no ${{ secrets.CSCF_SERVER_USER }}@${{ secrets.CSCF_SERVER_HOST }} 'bash -s' < .github/scripts/server.sh
