# Generated by Django 3.1.7 on 2021-03-25 06:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0002_auto_20210304_0005'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionPage',
            fields=[
                ('action_page_id', models.AutoField(primary_key=True, serialize=False)),
                ('choice', models.TextField()),
                ('result_page', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ActionsTaken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_id', models.IntegerField()),
                ('action_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.actionpage')),
            ],
        ),
        migrations.CreateModel(
            name='AssignedTo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Conversations',
            fields=[
                ('conversation_id', models.AutoField(primary_key=True, serialize=False)),
                ('scenario_id', models.IntegerField()),
                ('question', models.TextField()),
                ('response_id', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ConversationsHad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('course_id', models.IntegerField()),
                ('date_taken', models.DateTimeField()),
                ('score', models.FloatField()),
                ('conversation_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Coverage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coverage_score', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='GenericPage',
            fields=[
                ('generic_page_id', models.AutoField(primary_key=True, serialize=False)),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('issue_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('importance_score', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Majors',
            fields=[
                ('major_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('page_id', models.AutoField(primary_key=True, serialize=False)),
                ('page_type', models.CharField(max_length=200)),
                ('page_title', models.CharField(max_length=200)),
                ('version_id', models.IntegerField()),
                ('body', models.TextField()),
                ('next_page', models.IntegerField()),
                ('x_coordinate', models.IntegerField()),
                ('y_coordinate', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ProfessorTeach',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.courses')),
            ],
        ),
        migrations.CreateModel(
            name='ReflectionQuestions',
            fields=[
                ('reflection_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('reflection_question', models.TextField()),
                ('page_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.pages')),
            ],
        ),
        migrations.CreateModel(
            name='ReflectionsTaken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reflections', models.CharField(max_length=100)),
                ('date_taken', models.DateTimeField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.courses')),
                ('page_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.pages')),
            ],
        ),
        migrations.CreateModel(
            name='Responses',
            fields=[
                ('response_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_taken', models.DateTimeField()),
                ('choice', models.TextField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.courses')),
                ('page_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.pages')),
            ],
        ),
        migrations.CreateModel(
            name='Scenarios',
            fields=[
                ('scenario_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('public', models.BooleanField()),
                ('is_finished', models.BooleanField()),
                ('date_created', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='ScenariosFor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.courses')),
                ('scenario_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.scenarios')),
            ],
        ),
        migrations.CreateModel(
            name='StakeholderPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.pages')),
            ],
        ),
        migrations.CreateModel(
            name='Stakeholders',
            fields=[
                ('stakeholder_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('job', models.CharField(max_length=100)),
                ('introduction', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='StudentsIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.courses')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTimes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.IntegerField()),
                ('date_taken', models.DateTimeField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('page_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.pages')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('date_joined', models.DateField()),
                ('editor', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='UserTypes',
            fields=[
                ('user_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Versions',
            fields=[
                ('version_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=500)),
                ('num_conversation', models.IntegerField()),
                ('first_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.pages')),
                ('scenario_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.scenarios')),
            ],
        ),
        migrations.RemoveField(
            model_name='enrolled',
            name='course_id',
        ),
        migrations.RemoveField(
            model_name='enrolled',
            name='student_id',
        ),
        migrations.RemoveField(
            model_name='page',
            name='scenario_id',
        ),
        migrations.RemoveField(
            model_name='partof',
            name='course_id',
        ),
        migrations.RemoveField(
            model_name='partof',
            name='scenario_id',
        ),
        migrations.DeleteModel(
            name='Course',
        ),
        migrations.DeleteModel(
            name='Enrolled',
        ),
        migrations.DeleteModel(
            name='Page',
        ),
        migrations.DeleteModel(
            name='PartOf',
        ),
        migrations.DeleteModel(
            name='Scenario',
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.AddField(
            model_name='users',
            name='user_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.usertypes'),
        ),
        migrations.AddField(
            model_name='studenttimes',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.users'),
        ),
        migrations.AddField(
            model_name='studenttimes',
            name='version_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versions'),
        ),
        migrations.AddField(
            model_name='studentsin',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.users'),
        ),
        migrations.AddField(
            model_name='stakeholders',
            name='version_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versions'),
        ),
        migrations.AddField(
            model_name='stakeholderpage',
            name='stakeholder_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.stakeholders'),
        ),
        migrations.AddField(
            model_name='scenariosfor',
            name='version_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versions'),
        ),
        migrations.AddField(
            model_name='responses',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.users'),
        ),
        migrations.AddField(
            model_name='responses',
            name='version_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versions'),
        ),
        migrations.AddField(
            model_name='reflectionstaken',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.users'),
        ),
        migrations.AddField(
            model_name='reflectionstaken',
            name='version_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versions'),
        ),
        migrations.AddField(
            model_name='issues',
            name='version_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versions'),
        ),
        migrations.AddField(
            model_name='genericpage',
            name='page_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.pages'),
        ),
        migrations.AddField(
            model_name='coverage',
            name='issue_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.issues'),
        ),
        migrations.AddField(
            model_name='coverage',
            name='stakeholder_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.stakeholders'),
        ),
        migrations.AddField(
            model_name='conversationshad',
            name='stakeholder_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.stakeholders'),
        ),
        migrations.AddField(
            model_name='conversationshad',
            name='version_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versions'),
        ),
        migrations.AddField(
            model_name='conversations',
            name='stakeholder_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.stakeholders'),
        ),
        migrations.AddField(
            model_name='assignedto',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.users'),
        ),
        migrations.AddField(
            model_name='assignedto',
            name='version_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versions'),
        ),
        migrations.AddField(
            model_name='actionpage',
            name='page_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.pages'),
        ),
    ]
