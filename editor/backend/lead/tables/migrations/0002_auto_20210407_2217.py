# Generated by Django 2.2.12 on 2021-04-07 22:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('tables', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='action_page_choices',
            fields=[
                ('CHOICE', models.TextField()),
                ('APC_ID', models.AutoField(db_column='APC_ID', primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='generic_pages',
            fields=[
                ('BODY', models.TextField()),
                ('GP_ID', models.AutoField(db_column='GP_ID', editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='reflection_question',
            fields=[
                ('REFLECTION_QUESTION', models.TextField()),
                ('RQ_ID', models.AutoField(db_column='RQ_ID', primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(db_column='USER_ID', primary_key=True, serialize=False)),
                ('access_level', models.IntegerField(blank=True, db_column='ACCESS_LEVEL', null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserTypes',
            fields=[
                ('user_type_id', models.AutoField(db_column='USER_TYPE_ID', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
            ],
            options={
                'db_table': 'user_types',
            },
        ),
        migrations.CreateModel(
            name='Versions',
            fields=[
                ('version_id', models.AutoField(db_column='VERSION_ID', editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=1000, null=True)),
                ('num_conversation', models.IntegerField(blank=True, db_column='NUM_CONVERSATION', null=True)),
            ],
            options={
                'db_table': 'versions',
            },
        ),
        migrations.AlterUniqueTogether(
            name='generic_page',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='generic_page',
            name='PAGE',
        ),
        migrations.AlterUniqueTogether(
            name='reflection_questions',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='reflection_questions',
            name='PAGE',
        ),
        migrations.RemoveField(
            model_name='scenarios',
            name='NUM_CONVERSATION',
        ),
        migrations.RemoveField(
            model_name='scenarios',
            name='PROFESSOR',
        ),
        migrations.AddField(
            model_name='conversations',
            name='SCENARIO_ID',
            field=models.ForeignKey(db_column='SCENARIO_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stakeholders2', to='tables.scenarios'),
        ),
        migrations.AlterField(
            model_name='actions_taken',
            name='ACTION_PAGE',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions_taken2', to='tables.pages'),
        ),
        migrations.AlterField(
            model_name='assigned_to',
            name='VERSION',
            field=models.IntegerField(default=1, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='conversations_had',
            name='VERSION',
            field=models.IntegerField(default=1, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='courses',
            name='COURSE',
            field=models.IntegerField(default=None, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='issues',
            name='IMPORTANCE_SCORE',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='issues',
            name='ISSUE',
            field=models.AutoField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.RemoveField(
            model_name='issues',
            name='VERSION',
            field=models.ForeignKey(db_column='VERSION_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AddField(
            model_name='issues',
            name='VERSION',
            field=models.ForeignKey(db_column='VERSION_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AlterField(
            model_name='pages',
            name='NEXT_PAGE',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tables.pages'),
        ),
        migrations.RemoveField(
            model_name='pages',
            name='VERSION',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AddField(
            model_name='pages',
            name='VERSION',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AlterField(
            model_name='reflections_taken',
            name='VERSION',
            field=models.IntegerField(default=1, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='responses',
            name='VERSION',
            field=models.IntegerField(default=1, editable=False, null=True),
        ),
        migrations.RemoveField(
            model_name='scenarios',
            name='VERSION',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AddField(
            model_name='scenarios',
            name='VERSION',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AlterField(
            model_name='scenarios_for',
            name='VERSION',
            field=models.IntegerField(default=1, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='stakeholders',
            name='SCENARIO',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='stakeholders20', to='tables.scenarios'),
        ),
        migrations.RemoveField(
            model_name='stakeholders',
            name='VERSION',
            field=models.ForeignKey(db_column='VERSION_ID', on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AddField(
            model_name='stakeholders',
            name='VERSION',
            field=models.ForeignKey(null=True, db_column='VERSION_ID', on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AlterField(
            model_name='student_times',
            name='VERSION',
            field=models.IntegerField(default=1, editable=False, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='professors_teach',
            unique_together=set(),
        ),
        migrations.DeleteModel(
            name='action_page',
        ),
        migrations.DeleteModel(
            name='generic_page',
        ),
        migrations.DeleteModel(
            name='reflection_questions',
        ),
        migrations.AddField(
            model_name='versions',
            name='first_page',
            field=models.ForeignKey(blank=True, db_column='FIRST_PAGE', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tables.pages'),
        ),
        migrations.AddField(
            model_name='versions',
            name='scenario',
            field=models.ForeignKey(blank=True, db_column='SCENARIO_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.scenarios'),
        ),
        migrations.AddField(
            model_name='users',
            name='user_type',
            field=models.ForeignKey(blank=True, db_column='USER_TYPE_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tables.UserTypes'),
        ),
        migrations.AddField(
            model_name='reflection_question',
            name='PAGE',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_questions1', to='tables.pages'),
        ),
        migrations.AddField(
            model_name='reflection_question',
            name='VERSION',
            field=models.ForeignKey(db_column='VERSION_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AddField(
            model_name='generic_pages',
            name='PAGE',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generic_page1', to='tables.pages'),
        ),
        migrations.AddField(
            model_name='generic_pages',
            name='VERSION',
            field=models.ForeignKey(db_column='VERSION_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.Versions'),
        ),
        migrations.AddField(
            model_name='action_page_choices',
            name='PAGE',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_page1', to='tables.pages'),
        ),
        migrations.AddField(
            model_name='action_page_choices',
            name='RESULT_PAGE',
            field=models.ForeignKey(db_column='RESULT_PAGE', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='action_page2', to='tables.pages'),
        ),
        migrations.RemoveField(
            model_name='professors_teach',
            name='PROFESSOR',
        ),
        migrations.AddField(
            model_name='professors_teach',
            name='USER_ID',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='professors_teach1', to='tables.Users'),
        ),
        migrations.AddField(
            model_name='scenarios',
            name='user',
            field=models.ForeignKey(db_column='USER_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenario_creator2', to='tables.Users'),
        ),
        migrations.DeleteModel(
            name='professors',
        ),
        migrations.AlterUniqueTogether(
            name='reflection_question',
            unique_together={('PAGE', 'REFLECTION_QUESTION')},
        ),
        migrations.AlterUniqueTogether(
            name='generic_pages',
            unique_together={('PAGE', 'BODY')},
        ),
        migrations.AlterUniqueTogether(
            name='action_page_choices',
            unique_together={('PAGE', 'CHOICE')},
        ),
    ]
